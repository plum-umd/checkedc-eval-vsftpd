make headers all checked
- ascii.h
- ptracesandbox.h
- sysutil.h (may need to use iface)

make C files all checked
- ascii.c (returned buf; arrayptr vs nt_arrayptr)
- banner.c
- ftpcmdio.c
- ftpdataio.c
- ftppolicy.c
- oneprocess.c
- ptracesandbox.c
- readwrite.c
- seccompsandbox.c
- ssl.c
- sslslave.c
- str.c: make getlen and getbuf into macros so we can track length relationships
- sysdeputil.c
- sysstr.c
- sysutil.c
- twoprocess.c

Cleanup some checked files
- ipaddrparse.c (squirrely cast in unchecked code)
- make checked version of sys/stat, fix signal_checked to define
- sa_handler so I don't have to do
     sigact.sa_handler = (void (*)(int))p_handlefunc;
- when _Ptr<void> cast issue fixed, need to update hash.c and other files
- handle_eprt in postlogin.c is _Unchecked

Unlikely to make checked
- secbuf.c

===

NT notes:

Nt_array_ptr<char> buf : count(size) means that buf[size] == '\0’

array_ptr<T> p : bounds(lower, upper) :-  lower <= p' < upper // for all reads and writes via any pointer p’ based off p
array_ptr<T> p : count(n) :- p <= p’ < p + n // for all reads and writes via any pointer p’ based off p

nt_array_ptr<T> s : bounds(lower, upper) :- lower <= s’ < upper // for all writes via any pointer s’ based off s
nt_array_ptr<T> s : bounds(lower, upper) :- lower <= s’ <= upper // for all reads via any pointer s’ based off s
nt_array_ptr<T> s : count(n) :- s <= s’ < s + n // for all reads via any pointer s’ based off s.
nt_array_ptr<T> s : count(n) :- s <= s’ <= s + n // for all writes via any pointer s’ based off s.

Checked headers:

_builtin_stdio_checked.h	stdchecked.h
_builtin_string_checked.h	stdio_checked.h
fenv_checked.h			stdlib_checked.h
inttypes_checked.h		string_checked.h
math_checked.h			threads_checked.h
signal_checked.h		time_checked.h
